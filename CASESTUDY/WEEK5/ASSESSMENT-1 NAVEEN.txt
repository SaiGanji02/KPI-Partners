1.Understand the commonly used Data Models to build DWH
	"1. Identify the given data model and briefly explain about it.
        2. Understand how to set the dependencies during Stage tables and Target Tables load
        3. What are common issues with this model
        4. Are there any options to convert this model to START? If SO, how ?"


  1. Identify the given data model and briefly explain about it.

--A schema is known as a snowflake if one or more dimension tables do not connect directly
 to the fact table but must join through other dimension tables."

--The snowflake schema is an expansion of the star schema where each point of the star explodes into more points.
--It is called snowflake schema because the diagram of snowflake schema resembles a snowflake.
  Snowflaking is a method of normalizing the dimension tables in a STAR schemas. When we normalize all the dimension tables entirely,
  the resultant structure resembles a snowflake with the fact table in the middle.

--Snowflaking is used to develop the performance of specific queries.
  The schema is diagramed with each fact surrounded by its associated dimensions, and those dimensions are related to other dimensions,
  branching out into a snowflake pattern.

--The snowflake schema consists of one fact table which is linked to many dimension tables, 
  which can be linked to other dimension tables through a many-to-one relationship.
  Tables in a snowflake schema are generally normalized to the third normal form. Each dimension table performs exactly one level in a hierarchy.


2. Understand how to set the dependencies during Stage tables and Target Tables load

   Staging tables are just database tables containing your business data in some form or other. 
   Staging is the process of preparing your business data, usually taken from some business application.
   Essentially the source table is the place where the data is coming from and the target table is the place where the data is going to or the table that an action is taking place on. 
   They do not have to be in different schema's or have a different structure to each other and in fact they could actually be the same table.


  3. What are common issues with this model

--The primary disadvantage of the snowflake schema is the additional maintenance efforts required
  due to the increasing number of lookup tables. It is also known as a multi fact star schema.
--There are more complex queries and hence, difficult to understand.
--More tables more join so more query execution time.
--Performance issues while simultaneously trying to load and query data.
--Inefficiency in handling varied data sources.
--Expensive, slow and painful process of data recovery.
--Lack of single source of truth causing inconsistent, untrustworthy data and poor data sharing.


4.Are there any options to convert this model to START? If SO, how ?"

--Snowflake Schema:
It has more than one fact table used to avoid complexity and to create a more normalized structure.
--Star Schema:
It consists of a single fact table connected to dimension table visualized as a Star. 
Single link establishes between the fact table and dimension table.
--Snowflake Schema extension of Star Schema?
Large Dimension Tables normalized into multiple sub dimensional tables.
Every dimension table associated with the sub a dimension table and has multiple links.
A Snowflake schema is a Star schema structure normalized through the use of outrigger tables. i.e., the dimension table hierarchies broken into more unadorned tables.:

------------------------------------------------------------------------------------------------------------------------

2.Create Stage Tables..	Provide all the CREATE statements

CREATE TABLE KPI_STG_TRANSACTION_LINES	
(TRANSACTION_ID	NUMBER(20,0),TRANSACTION_LINE_ID NUMBER(20,0)
LOCATION_ID NUMBER(20,0),
DEPARTMENT_ID NUMBER(20,0),
ITEM_ID	NUMBER(20,0),
AMOUNT	NUMBER(8,2),
COST	NUMBER(8,2),
UNITS	NUMBER(5,0));


CREATE TABLE KPI_STG_TRANSACTIONS	
(TRANSACTION_ID	NUMBER(20,0),
TRANID	VARCHAR(30),
TRANSACTION_TYPE	VARCHAR(50),
TRANDATE	DATE,
CHANNEL_ID	NUMBER(20,0));

CREATE TABLE KPI_STG_ITEMS	
(ITEM_ID	NUMBER(20,0),
SKU	VARCHAR(100),
TYPE_NAME	VARCHAR(30),
SALESDESCRIPTION	VARCHAR(100),
CLASS_ID	NUMBER(20,0),
WS_MERCHANDISE_DEPARTMENT_ID	NUMBER(20,0),
WS_MERCHANDISE_COLLECTION_ID	NUMBER(20,0),
WS_MERCHANDISE_CLASS_ID	NUMBER(20,0),
WS_MERCHANDISE_SUBCLASS_ID	NUMBER(20,0));


create table KPI_STG_CLASSES(CLASS_ID NUMBER(20,0),
DATE_LAST_MODIFIED	DATE,
FULL_NAME	VARCHAR(30),
ISINACTIVE	VARCHAR(5),
NAME VARCHAR(5));
show user;
select * from kpi_stg_classes;
select * from kpi_stg_items;



create table ITEM_MERCHANDISE_DEPARTMENT(ITEM_MERCHANDISE_DEPARTMENT_ID	NUMBER(20,0),
DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_DEPARTMENT_NA	VARCHAR(10));

select * from ITEM_MERCHANDISE_DEPARTMENT;

create table ITEM_MERCHANDISE_COLLECTION(ITEM_MERCHANDISE_COLLECTION_ID	NUMBER(20,0),
DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_COLLECTION_NA	VARCHAR(50));

select * from ITEM_MERCHANDISE_COLLECTION;

CREATE TABLE ITEM_MERCHANDISE_CLASS(ITEM_MERCHANDISE_CLASS_ID	NUMBER(20,0),
DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_CLASS_NAME	VARCHAR(5));
SELECT * FROM ITEM_MERCHANDISE_CLASS;

CREATE TABLE CHANNEL(DATE_CREATED	DATE,
IS_RECORD_INACTIVE	CHAR,
LAST_MODIFIED_DATE	DATE,
LIST_ID	NUMBER(20,0),
LIST_ITEM_NAME	VARCHAR(20));

SELECT * FROM CHANNEL;

CREATE TABLE LOCATIONS(	LOCATION_ID	NUMBER(20,0),
	ADDRESS	VARCHAR(120),
	CITY	VARCHAR(50),
	COUNTRY	VARCHAR(50),
	DATE_LAST_MODIFIED	DATE,
	FULL_NAME	VARCHAR(100),
	ISINACTIVE	VARCHAR(5),
	NAME	VARCHAR(50));
    
SELECT * FROM LOCATIONS;

CREATE TABLE DEPARTMENTS(DATE_LAST_MODIFIED	DATE,
DEPARTMENT_ID	NUMBER(20,0),
ISINACTIVE	VARCHAR(5),
NAME	VARCHAR(20),
WS_DESCRIPTION	VARCHAR(50));

SELECT * FROM DEPARTMENTS;

CREATE TABLE ITEM_MERCHANDISE_SUBCLASS(ITEM_MERCHANDISE_SUBCLASS_ID	NUMBER(20,0),
DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_SUBCLASS_NAME	VARCHAR(10));

SELECT * FROM ITEM_MERCHANDISE_SUBCLASS;

----------------------------------------------------------------------------------------------------------------------------------------

3.Load the data in the tables	
 Provide the INSERT Scripts

--Row 1
INSERT INTO CHANNEL (DATE_CREATED, IS_RECORD_INACTIVE, LAST_MODIFIED_DATE, LIST_ID, LIST_ITEM_NAME) VALUES (to_date('2012/12/18', 'RRRR-MM-DD'),'F',to_date('2013/04/30', 'RRRR-MM-DD'),1,'Retail');
--Row 2
INSERT INTO CHANNEL (DATE_CREATED, IS_RECORD_INACTIVE, LAST_MODIFIED_DATE, LIST_ID, LIST_ITEM_NAME) VALUES (to_date('2012/12/18', 'RRRR-MM-DD'),'F',to_date('2013/04/30', 'RRRR-MM-DD'),2,'DTC');
--Row 3
INSERT INTO CHANNEL (DATE_CREATED, IS_RECORD_INACTIVE, LAST_MODIFIED_DATE, LIST_ID, LIST_ITEM_NAME) VALUES (to_date('2013/04/30', 'RRRR-MM-DD'),'F',to_date('2013/04/30', 'RRRR-MM-DD'),3,'Care Center');
--Row 4
INSERT INTO CHANNEL (DATE_CREATED, IS_RECORD_INACTIVE, LAST_MODIFIED_DATE, LIST_ID, LIST_ITEM_NAME) VALUES (to_date('2013/05/07', 'RRRR-MM-DD'),'F',to_date('2013/05/07', 'RRRR-MM-DD'),4,'RTC');
--Row 5
INSERT INTO CHANNEL (DATE_CREATED, IS_RECORD_INACTIVE, LAST_MODIFIED_DATE, LIST_ID, LIST_ITEM_NAME) VALUES (to_date('2015/08/06', 'RRRR-MM-DD'),'F',to_date('2015/08/14', 'RRRR-MM-DD'),5,'Wholesale');


--------



INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),1,'No','7001','Store WS NSW, Bondi Junction, 2/13 (7001)');
--Row 2
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2020/11/11', 'RRRR-MM-DD'),2,'No','7002','Store  PB NSW, Bondi Junction, 2/13 (7002)');
--Row 3
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2020/11/11', 'RRRR-MM-DD'),3,'No','7003','Store  PK NSW, Bondi Junction, 2/13 (7003)');
--Row 4
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),4,'No','7004','Store WE NSW, Bondi Junction, 2/13 (7004)');
--Row 5
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2012/12/18', 'RRRR-MM-DD'),5,'Yes','7211','NULL');
--Row 6
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2012/12/18', 'RRRR-MM-DD'),11,'Yes','AUS Corp Misc','NULL');
--Row 7
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2012/12/18', 'RRRR-MM-DD'),12,'Yes','2012DC/Ops- RTL','NULL');
--Row 8
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2012/12/18', 'RRRR-MM-DD'),15,'Yes','DC/Ops- DTC (tbd)','NULL');
--Row 9
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2012/12/18', 'RRRR-MM-DD'),16,'Yes','Legal Entity (tbd)','NULL');
--Row 10
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/07/31', 'RRRR-MM-DD'),20,'No','7111','WS Singapore LE â€“ Global Purchases');
--Row 11
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/04/19', 'RRRR-MM-DD'),21,'No','ICO32&31','Intercomapny Cost Center for 32 to 31 transfer');
--Row 12
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),22,'No','7005','WE Vic Chapel St 2013');
--Row 13
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/03/11', 'RRRR-MM-DD'),23,'No','ICO71&32','Intercompany cost center for 71 to 32 transfers');
--Row 14
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/07/31', 'RRRR-MM-DD'),24,'Yes','Employee Sale','Employee Sale');
--Row 15
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),25,'No','7224','PB & PK NSW Bondi Junction');
--Row 16
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/12/31', 'RRRR-MM-DD'),27,'No','7354','PB DTC and eComm (Australia)');
--Row 17
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/12/31', 'RRRR-MM-DD'),28,'No','7355','PK DTC and eComm (Australia)');
--Row 18
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/12/31', 'RRRR-MM-DD'),29,'No','7356','WE DTC and eComm (Australia)');
--Row 19
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/12/31', 'RRRR-MM-DD'),30,'No','7357','WS DTC and eComm (Australia)');
--Row 20
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/07/15', 'RRRR-MM-DD'),31,'No','ICO71&60','Intercompany cost center for 71 to 60 transfers');
--Row 21
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),32,'No','7006','WE UK , London Tottenham 2013');
--Row 22
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/08/30', 'RRRR-MM-DD'),33,'No','7327','UK DC');
--Row 23
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2013/12/31', 'RRRR-MM-DD'),34,'No','7358','WE EComm (UK)');
--Row 24
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),35,'No','7007','PK, NSW, Chatswood Chase');
--Row 25
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),36,'No','7008','WS, NSW Chatswood Chase');
--Row 26
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),37,'No','7009','WE, NSW, Chatswood Chase');
--Row 27
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),38,'No','7010','PB, NSW, Chatswood Chase');
--Row 28
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2014/07/24', 'RRRR-MM-DD'),39,'No','ITCO1','US Allocation Cost Centre');
--Row 29
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2014/07/24', 'RRRR-MM-DD'),41,'No','05971 WSI','WSI Company 1');
--Row 30
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2016/04/07', 'RRRR-MM-DD'),42,'No','7113','PB OT, FYSHWICK, AUS');
--Row 31
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2014/10/02', 'RRRR-MM-DD'),43,'No','7011','WS, VIC, Melbourne, Chadstone');
--Row 32
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2014/10/02', 'RRRR-MM-DD'),44,'No','7012','PB, VIC, Melbourne, Chadstone');
--Row 33
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2014/10/02', 'RRRR-MM-DD'),45,'No','7013','PK, VIC, Melbourne, Chadstone');
--Row 34
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2014/10/02', 'RRRR-MM-DD'),46,'No','7014','WE, VIC, Melbourne, Chadstone');
--Row 35
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),47,'No','7114','Chadstone Inventory Loc Cost center');
--Row 36
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/01/27', 'RRRR-MM-DD'),48,'No','5969','WS UK Entity');
--Row 37
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/01/31', 'RRRR-MM-DD'),49,'No','7222','UK WE Retail - Misc COGS');
--Row 38
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/02/03', 'RRRR-MM-DD'),50,'No','7370','UK PB INTERNET');
--Row 39
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/03/19', 'RRRR-MM-DD'),51,'No','7018','PB, WA, Perth; Hay Street');
--Row 40
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/04/06', 'RRRR-MM-DD'),52,'No','7019','PK, WA, Perth; Hay Street');
--Row 41
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/03/19', 'RRRR-MM-DD'),53,'No','7020','WE, WA, Perth; Hay Street');
--Row 42
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/03/19', 'RRRR-MM-DD'),54,'No','7115','PB QLD, Fortitude Valley; Brisbane');
--Row 43
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/03/19', 'RRRR-MM-DD'),55,'No','7116','PK QLD, Fortitude Valley; Brisbane');
--Row 44
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/03/19', 'RRRR-MM-DD'),56,'No','7117','WE QLD, Fortitude Valley; Brisbane');
--Row 45
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),57,'No','7118','Fortitude Valley inventory Loc Cost Center');
--Row 46
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/09/25', 'RRRR-MM-DD'),58,'No','7021','Perth Inventory Loc Cost Center');
--Row 47
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2015/10/15', 'RRRR-MM-DD'),59,'No','7022','John Lewis WE Cost center');
--Row 48
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2016/11/07', 'RRRR-MM-DD'),60,'No','7023','WS Confectionary Items â€“ Brisbane');
--Row 49
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2016/11/07', 'RRRR-MM-DD'),61,'No','7024','WS Confectionary Items - Perth');
--Row 50
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/04/10', 'RRRR-MM-DD'),62,'No','7119','Outlet, AU Essendon');
--Row 51
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/07/31', 'RRRR-MM-DD'),64,'No','7120','WE UK, Kingston');
--Row 52
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/08/08', 'RRRR-MM-DD'),65,'No','7121','Fortnum & Mason');
--Row 53
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/08/08', 'RRRR-MM-DD'),66,'No','7122','WE Arnott''s');
--Row 54
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/09/20', 'RRRR-MM-DD'),67,'No','7123','WS Harrods');
--Row 55
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/19', 'RRRR-MM-DD'),68,'No','5901','Company 1 In Transit');
--Row 56
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/19', 'RRRR-MM-DD'),69,'No','5911','Canada Retail');
--Row 57
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/19', 'RRRR-MM-DD'),70,'No','5926','Canada DTC Intercompany');
--Row 58
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/18', 'RRRR-MM-DD'),71,'No','7372','WS Canada DTC');
--Row 59
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/18', 'RRRR-MM-DD'),72,'No','7373','PB Canada DTC');
--Row 60
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/18', 'RRRR-MM-DD'),73,'No','7374','PK Canada DTC');
--Row 61
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/18', 'RRRR-MM-DD'),74,'No','7375','PT Canada DTC');
--Row 62
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/18', 'RRRR-MM-DD'),75,'No','7376','WE Canada DTC');
--Row 63
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/13', 'RRRR-MM-DD'),76,'No','ICO1&2','Intercompany Cost center - Sub 1 and Sub 2');
--Row 64
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),77,'No','6019','WE MARKET VANCOUVERCANADA');
--Row 65
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),78,'No','6222','WS YORKDALE SHOPPING CENT');
--Row 66
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),79,'No','6113','WE MT ROYALVILLAGECANADA');
--Row 67
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),80,'No','6112','PK CHINOOK CENTRE  CANADA');
--Row 68
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),81,'No','6038','WE GRIFFINTOWN QC');
--Row 69
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),82,'No','6012','WS CARREFOUR LAVAL CANADA');
--Row 70
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),83,'No','936','PB GRANVILLE  CANADA');
--Row 71
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),84,'No','6004','WE GRANVILLE CANADA');
--Row 72
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),85,'No','955','WS GRANVILLE CANADA');
--Row 73
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),86,'No','926','PK GRANVILLE STREET CANADA');
--Row 74
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),87,'No','917','WE SHOPS AT KING LIBERTY');
--Row 75
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),88,'No','820','WS CHINOOK CENTRE CANADA');
--Row 76
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),89,'No','786','PK SHERWAY GARDENS CANADA');
--Row 77
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),90,'No','760','PB CHINOOK CENTRE  CANADA');
--Row 78
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),91,'No','742','PB SHERWAY GARDENS CANADA');
--Row 79
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),92,'No','662','PB DIX 30');
--Row 80
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),93,'No','672','WS DIX 30');
--Row 81
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),94,'No','712','WS SHERWAY GARDENS CANADA');
--Row 82
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),95,'No','663','PK DIX 30');
--Row 83
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),96,'No','667','WS WEST EDMONTON MALL CAN');
--Row 84
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),97,'No','634','PB WEST EDMONTON MALL CAN');
--Row 85
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),98,'No','551','PK YORKDALE  CANADA');
--Row 86
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),99,'No','542','PB YORKDALE  CANADA');
--Row 87
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/14', 'RRRR-MM-DD'),100,'No','536','WS Eaton Center');
--Row 88
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/10/17', 'RRRR-MM-DD'),177,'No','4102','CMO Packing - OB2');
--Row 89
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/12/14', 'RRRR-MM-DD'),178,'No','7124','WE UK, Westfield 2018');
--Row 90
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2017/12/14', 'RRRR-MM-DD'),179,'No','7016','PK UK, London Westfield 2018');
--Row 91
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2018/02/07', 'RRRR-MM-DD'),180,'No','6259','WE Yonge and Roselawn');
--Row 92
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2018/03/29', 'RRRR-MM-DD'),181,'No','7371','UK PK Internet');
--Row 93
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2018/06/07', 'RRRR-MM-DD'),182,'No','7125','John Lewis PK Cost center');
--Row 94
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2018/07/20', 'RRRR-MM-DD'),183,'No','2749','UK PK Items - Tottenham');
--Row 95
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2018/07/20', 'RRRR-MM-DD'),184,'No','2750','UK PK Items -  Kingston');
--Row 96
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2018/07/20', 'RRRR-MM-DD'),185,'No','2751','AUS PK items - Chapel St');
--Row 97
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2018/07/23', 'RRRR-MM-DD'),186,'No','7127','Brown Thomas');
--Row 98
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2019/05/24', 'RRRR-MM-DD'),187,'No','7128','PB Ballantynes');
--Row 99
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2019/05/21', 'RRRR-MM-DD'),188,'No','7126','PK ARNOTT''S');
--Row 100
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2019/05/24', 'RRRR-MM-DD'),189,'No','7129','PK Ballantynes');
--Row 101
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2019/05/24', 'RRRR-MM-DD'),190,'No','7130','WE Ballantynes');
--Row 102
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2020/06/26', 'RRRR-MM-DD'),191,'No','6277','WE YONGE & EGLINTON');
--Row 103
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2021/04/29', 'RRRR-MM-DD'),192,'No','7131','Castle Towers Outlet');
--Row 104
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2021/08/24', 'RRRR-MM-DD'),193,'No','7400','AUS DC');
--Row 105
INSERT INTO DEPARTMENTS (DATE_LAST_MODIFIED, DEPARTMENT_ID, ISINACTIVE, NAME, WS_DESCRIPTION) VALUES (to_date('2021/08/24', 'RRRR-MM-DD'),195,'No','ICO71&31','Intercompany Cost Center for 71 to 31 Transfers');



--Row 1
INSERT INTO KPI_STG_CLASSES (CLASS_ID, DATE_LAST_MODIFIED, FULL_NAME, ISINACTIVE, NAME) VALUES (1,to_date('2018/02/13', 'RRRR-MM-DD'),'WE','No','WE');
--Row 2
INSERT INTO KPI_STG_CLASSES (CLASS_ID, DATE_LAST_MODIFIED, FULL_NAME, ISINACTIVE, NAME) VALUES (3,to_date('2013/06/13', 'RRRR-MM-DD'),'PT','No','PT');
--Row 3
INSERT INTO KPI_STG_CLASSES (CLASS_ID, DATE_LAST_MODIFIED, FULL_NAME, ISINACTIVE, NAME) VALUES (4,to_date('2013/06/13', 'RRRR-MM-DD'),'PB','No','PB');
--Row 4
INSERT INTO KPI_STG_CLASSES (CLASS_ID, DATE_LAST_MODIFIED, FULL_NAME, ISINACTIVE, NAME) VALUES (5,to_date('2013/06/13', 'RRRR-MM-DD'),'PK','No','PK');
--Row 5
INSERT INTO KPI_STG_CLASSES (CLASS_ID, DATE_LAST_MODIFIED, FULL_NAME, ISINACTIVE, NAME) VALUES (6,to_date('2013/06/13', 'RRRR-MM-DD'),'WS','No','WS');
--Row 6
INSERT INTO KPI_STG_CLASSES (CLASS_ID, DATE_LAST_MODIFIED, FULL_NAME, ISINACTIVE, NAME) VALUES (7,to_date('2014/04/18', 'RRRR-MM-DD'),'DC','No','DC');

------------


---------------------------------------------------------------------------------------------------------------------------------

4.Analyse the Business Keys if they meet Primary key conditions for all Stage tables	
   Provide the SQLs to execute to ensure Primary Key conditions on business key.



SELECT COUNT (DISTINCT DATE_CREATED) FROM CHANNEL WHERE DATE_CREATED IS NOT NULL;
SELECT COUNT (DISTINCT IS_RECORD_INACTIVE) FROM CHANNEL WHERE IS_RECORD_INACTIVE IS NOT NULL;
SELECT COUNT (DISTINCT LAST_MODIFIED_DATE) FROM CHANNEL WHERE LAST_MODIFIED_DATE IS NOT NULL;
SELECT COUNT (DISTINCT LIST_ID) FROM CHANNEL WHERE LIST_ID IS NOT NULL;
SELECT COUNT (DISTINCT LIST_ITEM_NAME) FROM CHANNEL WHERE LIST_ITEM_NAME IS NOT NULL;



SELECT COUNT (DISTINCT TRANSACTION_ID) FROM KPI_STG_TRANSACTIONS WHERE TRANSACTION_ID IS NOT NULL;
SELECT COUNT (DISTINCT TRANID) FROM KPI_STG_TRANSACTIONS WHERE TRANID IS NOT NULL;
SELECT COUNT (DISTINCT TRANSACTION_TYPE) FROM KPI_STG_TRANSACTIONS WHERE TRANSACTION_TYPE IS NOT NULL;
SELECT COUNT (DISTINCT TRANDATE) FROM KPI_STG_TRANSACTIONS WHERE TRANDATE IS NOT NULL;
SELECT COUNT (DISTINCT CHANNEL_ID) FROM KPI_STG_TRANSACTIONS WHERE CHANNEL_ID IS NOT NULL;



SELECT COUNT (DISTINCT TRANSACTION_ID) FROM KPI_STG_TRANSACTION_LINES WHERE TRANSACTION_ID IS NOT NULL;
SELECT COUNT (DISTINCT TRANSACTION_LINE_ID) FROM KPI_STG_TRANSACTION_LINES WHERE TRANSACTION_LINE_ID IS NOT NULL;
SELECT COUNT (DISTINCT LOCATION_ID) FROM KPI_STG_TRANSACTION_LINES WHERE LOCATION_ID IS NOT NULL;
SELECT COUNT (DISTINCT DEPARTMENT_ID) FROM KPI_STG_TRANSACTION_LINES WHERE DEPARTMENT_ID IS NOT NULL;
SELECT COUNT (DISTINCT ITEM_ID) FROM KPI_STG_TRANSACTION_LINES WHERE ITEM_ID IS NOT NULL;
SELECT COUNT (DISTINCT AMOUNT) FROM KPI_STG_TRANSACTION_LINES WHERE AMOUNT IS NOT NULL;
SELECT COUNT (DISTINCT COST) FROM KPI_STG_TRANSACTION_LINES WHERE COST IS NOT NULL;
SELECT COUNT (DISTINCT UNITS) FROM KPI_STG_TRANSACTION_LINES WHERE UNITS IS NOT NULL;




SELECT COUNT (DISTINCT DATE_LAST_MODIFIED) FROM DEPARTMENTS WHERE DATE_LAST_MODIFIED IS NOT NULL;
SELECT COUNT (DISTINCT DEPARTMENT_ID) FROM DEPARTMENTS WHERE DEPARTMENT_ID IS NOT NULL;
SELECT COUNT (DISTINCT ISINACTIVE) FROM DEPARTMENTS WHERE ISINACTIVE IS NOT NULL;
SELECT COUNT (DISTINCT NAME) FROM DEPARTMENTS WHERE NAME IS NOT NULL;
SELECT COUNT (DISTINCT WS_DESCRIPTION) FROM DEPARTMENTS WHERE WS_DESCRIPTION IS NOT NULL;


SELECT COUNT (DISTINCT DEPARTMENT_ID) FROM KPI_ITEMS WHERE DEPARTMENT_ID IS NOT NULL;
SELECT COUNT (DISTINCT DESCRIPTION) FROM KPI_ITEM WHERE DESCRIPTION IS NOT NULL;
SELECT COUNT (DISTINCT DEPARTMENT_NA) FROM KPI_ITEM WHERE DEPARTMENT_ IS NOT NULL;
SELECT COUNT (DISTINCT DEPARTMENT_ID) FROM KPI_ITEM WHERE DEPARTMENT_ID IS NOT NULL;
SELECT COUNT (DISTINCT DEPARTMENT_ID) FROM KPI_ITEM WHERE DEPARTMENT_ID IS NOT NULL;




SELECT COUNT (DISTINCT ITEM_ID) FROM KPI_STG_ITEMS WHERE ITEM_ID IS NOT NULL;
SELECT COUNT (DISTINCT SKU) FROM KPI_STG_ITEMS WHERE SKU IS NOT NULL;
SELECT COUNT (DISTINCT TYPE_NAME) FROM KPI_STG_ITEMS WHERE TYPE_NAME IS NOT NULL;
SELECT COUNT (DISTINCT SALESDESCRIPTION) FROM KPI_STG_ITEMS WHERE SALESDESCRIPTION IS NOT NULL;
SELECT COUNT (DISTINCT CLASS_ID) FROM KPI_STG_ITEMS WHERE CLASS_ID IS NOT NULL;
SELECT COUNT (DISTINCT WS_MERCHANDISE_DEPARTMENT_ID) FROM KPI_STG_ITEMS WHERE WS_MERCHANDISE_DEPARTMENT_ID IS NOT NULL;
SELECT COUNT (DISTINCT WS_MERCHANDISE_COLLECTION_ID) FROM KPI_STG_ITEMS WHERE WS_MERCHANDISE_COLLECTION_ID IS NOT NULL;
SELECT COUNT (DISTINCT WS_MERCHANDISE_CLASS_ID) FROM KPI_STG_ITEMS WHERE WS_MERCHANDISE_CLASS_ID IS NOT NULL;
SELECT COUNT (DISTINCT WS_MERCHANDISE_SUBCLASS_ID) FROM KPI_STG_ITEMS WHERE WS_MERCHANDISE_SUBCLASS_ID IS NOT NULL;



SELECT COUNT (DISTINCT CLASS_ID) FROM KPI_STG_CLASSES WHERE CLASS_ID IS NOT NULL;

SELECT COUNT (DISTINCT DATE_LAST_MODIFIED) FROM KPI_STG_CLASSES WHERE DATE_LAST_MODIFIED IS NOT NULL;
SELECT COUNT (DISTINCT FULL_NAME) FROM KPI_STG_CLASSES WHERE FULL_NAME IS NOT NULL;
SELECT COUNT (DISTINCT ISINACTIVE) FROM KPI_STG_CLASSES WHERE ISINACTIVE IS NOT NULL;
SELECT COUNT (DISTINCT NAME) FROM KPI_STG_CLASSES WHERE NAME IS NOT NULL;


SELECT COUNT (DISTINCT ITEM_MERCHANDISE_CLASS_ID) FROM ITEM_MERCHANDISE_CLASS WHERE ITEM_MERCHANDISE_CLASS_ID IS NOT NULL;
SELECT COUNT (DISTINCT DESCRIPTION) FROM ITEM_MERCHANDISE_CLASS WHERE DESCRIPTION IS NOT NULL;
SELECT COUNT (DISTINCT ITEM_MERCHANDISE_CLASS_NAME) FROM ITEM_MERCHANDISE_CLASS WHERE ITEM_MERCHANDISE_CLASS_NAME IS NOT NULL;


SELECT COUNT (DISTINCT ITEM_MERCHANDISE_COLLECTION_ID) FROM ITEM_MERCHANDISE_COLLECTION WHERE ITEM_MERCHANDISE_COLLECTION_ID IS NOT NULL;

SELECT COUNT (DISTINCT DESCRIPTION) FROM ITEM_MERCHANDISE_COLLECTION WHERE DESCRIPTION IS NOT NULL;
SELECT COUNT (DISTINCT ITEM_MERCHANDISE_COLLECTION_NA) FROM ITEM_MERCHANDISE_COLLECTION WHERE ITEM_MERCHANDISE_COLLECTION_NA IS NOT NULL;




SELECT COUNT (DISTINCT ITEM_MERCHANDISE_DEPARTMENT_ID) FROM ITEM_MERCHANDISE_DEPARTMENT WHERE ITEM_MERCHANDISE_DEPARTMENT_ID IS NOT NULL;
SELECT COUNT (DISTINCT DESCRIPTION) FROM ITEM_MERCHANDISE_DEPARTMENT WHERE DESCRIPTION IS NOT NULL;
SELECT COUNT (DISTINCT ITEM_MERCHANDISE_DEPARTMENT_NA) FROM ITEM_MERCHANDISE_DEPARTMENT WHERE ITEM_MERCHANDISE_DEPARTMENT_NA IS NOT NULL;



SELECT COUNT (DISTINCT ITEM_MERCHANDISE_SUBCLASS_ID) FROM ITEM_MERCHANDISE_SUBCLASS WHERE ITEM_MERCHANDISE_SUBCLASS_ID IS NOT NULL;
SELECT COUNT (DISTINCT DESCRIPTION) FROM ITEM_MERCHANDISE_SUBCLASS WHERE DESCRIPTION IS NOT NULL;
SELECT COUNT (DISTINCT ITEM_MERCHANDISE_SUBCLASS_NAME) FROM ITEM_MERCHANDISE_SUBCLASS WHERE ITEM_MERCHANDISE_SUBCLASS_NAME IS NOT NULL;


---------------------------------------------------------------------------------------------------------------------------------------
5.Delete the  duplicate records if exists and maintain unique recor--Provide the DELETE scripts using Analytical function

DELETE FROM CHANNEL WHERE rowid not in (SELECT MIN(rowid)
FROM CHANNEL GROUP BY LIST_ID) ;


DELETE FROM KPI_STG_TRANSACTIONS WHERE rowid not in (SELECT MIN(rowid)
FROM KPI_STG_TRANSACTIONS GROUP BY TRANSACTION_ID) ;

DELETE FROM KPI_STG_TRANSACTIONS WHERE rowid not in (SELECT MIN(rowid)
FROM KPI_STG_TRANSACTIONS GROUP BY TRANID) ;


DELETE FROM KPI_STG_ITEMS WHERE rowid not in (SELECT MIN(rowid)
FROM KPI_STG_ITEMS GROUP BY ITEM_ID) ;

DELETE FROM KPI_STG_ITEMS WHERE rowid not in (SELECT MIN(rowid)
FROM KPI_STG_ITEMS GROUP BY SKU) ;


--------------------------------------------------------------------------------------------
6.Create Primary Key on Stage tables----Provide the scripts used to create Primary Key


alter table channel add primary key (list_id);

alter table locations add primary key (location_id);

alter table KPI_STG_TRANSACTION_LINES add primary key(transaction_id,transaction_line_id);

alter table departments add primary key (department_id)

alter table kpi_stg_items add primary key (item_id);

ALTER TABLE KPI_STG_CLASSES ADD PRIMARY KEY (CLASS_ID);

-----------------------------------------------------------------------------------------------


7.Identify the relationships between each table	
  Provide the SELECT SQLs executed to identify the relationships



ALTER TABLE TRANSACTIONS  
ADD CONSTRAINT CHANNELID
FOREIGN KEY (CHANNEL_ID) REFERENCES CHANNEL(LIST_ID);


ALTER TABLE TRANSACTION_LINES ADD CONSTRAINT pk_TRANSACTION_ID PRIMARY KEY(TRANSACTION_ID);

ALTER TABLE TRANSACTION_LINES 
ADD CONSTRAINT TRANSACTIONID
FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTIONS(TRANSACTION_ID);

ALTER TABLE TRANSACTION_LINES 
ADD CONSTRAINT LOCATIONID
FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID);

ALTER TABLE TRANSACTION_LINES 
ADD CONSTRAINT ITEMID
FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ITEM_ID);

ALTER TABLE TRANSACTION_LINES 
ADD CONSTRAINT DEPARTMENTID
FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID);

ALTER TABLE TRANSACTION_LINES 
ADD CONSTRAINT ITEMID
FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ITEM_ID);

ALTER TABLE ITEMS
ADD CONSTRAINT WS_MERCHANDISECLASSID
FOREIGN KEY (CLASS_ID) REFERENCES CLASSES(CLASS_ID);

ALTER TABLE ITEM_MERCHANDISE_SUBCLASS  ADD CONSTRAINT ITEMMERCHANDISESUBCLASSID PRIMARY KEY (ITEM_MERCHANDISE_SUBCLASS_ID);

ALTER TABLE ITEMS
ADD CONSTRAINT WSMERCHANDISESUBCLASSID
FOREIGN KEY (WS_MERCHANDISE_SUBCLASS_ID) REFERENCES ITEM_MERCHANDISE_SUBCLASS (ITEM_MERCHANDISE_SUBCLASS_ID);



---------------------------------------------------------------------------------------------
8.Create Target Tables	"1. CREATE all the target tables
         2. CREATE SEQUENCE to populate KPI_DW_SKEY field in all Target tables.
         Provide all the scripts
         3. Create PRIMARY KEY on KPI_DW_SKEY"


create table KPI_CHANNEL_DIM	
(DATE_CREATED	DATE,
IS_RECORD_INACTIVE	CHAR,
LAST_MODIFIED_DATE	DATE,
LIST_ID	NUMBER(20,0),
LIST_ITEM_NAME	VARCHAR(20),
KPI_DW_SKEY	NUMBER(20,0) null,
KPI_DW_INSERT_DATE	DATE null ,
KPI_DW_UPDATE_DATE	DATE null);

------

 create table KPI_LOCATION_DIM (LOCATION_ID	NUMBER(20,0),
ADDRESS	VARCHAR(100),
CITY	VARCHAR(50),
COUNTRY	VARCHAR(50),
DATE_LAST_MODIFIED	DATE,
FULL_NAME	VARCHAR(50),
ISINACTIVE	VARCHAR(5),
NAME VARCHAR(50),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE	DATE,
KPI_DW_UPDATE_DATE	DATE);

--------
create table KPI_TRANSACTION_LINE_FACT	
(TRANSACTION_ID	NUMBER(20,0),
TRANSACTION_LINE_ID	NUMBER(20,0),
TRANID	VARCHAR(30),
TRANSACTION_TYPE	VARCHAR(50),
TRANDATE	DATE,
KPI_CHANNEL_SKEY	NUMBER(20,0),
KPI_LOCATION_SKEY	NUMBER(20,0),
KPI_DEPARTMENT_SKEY	NUMBER(20,0),
KPI_ITEM_SKEY	NUMBER(20,0),
AMOUNT	NUMBER(8,2),
COST	NUMBER(8,2),
UNITS	NUMBER(5,0),
KPI_DW_SKEY	NUMBER(20,0));
--------
create table KPI_DEPARTMENT_DIM	
(DATE_LAST_MODIFIED	DATE,
DEPARTMENT_ID	NUMBER(20,0),
ISINACTIVE	VARCHAR(5),
NAME	VARCHAR(10),
WS_DESCRIPTION	VARCHAR(50),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE	DATE,
KPI_DW_UPDATE_DATE	DATE)

----------
create table KPI_CLASS_DIM	
(CLASS_ID	NUMBER(20,0),
DATE_LAST_MODIFIED	DATE,
FULL_NAME	VARCHAR(30),
ISINACTIVE	VARCHAR(5),
NAME	VARCHAR(5),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE	DATE,
KPI_DW_UPDATE_DATE	DATE);

--------
create table MERCHANDISE_DEPTARMENT_DIM	
(ITEM_MERCHANDISE_DEPARTMENT_ID	NUMBER(20,0)
,DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_DEPARTMENT_NA	VARCHAR(40),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE	DATE,
KPI_DW_UPDATE_DATE	DATE);

--



create table MERCHANDISE_COLLECTION_DIM	
(ITEM_MERCHANDISE_COLLECTION_ID	NUMBER(20,0),
DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_COLLECTION_NA	VARCHAR(50),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE	DATE,
KPI_DW_UPDATE_DATE	DATE);

---
create table KPI_ITEM_MERCHANDISE_CLASS_DIM	
(ITEM_MERCHANDISE_CLASS_ID	NUMBER(20,0),
DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_CLASS_NAME	VARCHAR(5),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE	DATE,
KPI_DW_UPDATE_DATE	DATE);

-------
create table MERCHANDISE_SUBCLASS_DIM	
(ITEM_MERCHANDISE_SUBCLASS_ID	NUMBER(20,0),
DESCRIPTION	VARCHAR(50),
ITEM_MERCHANDISE_SUBCLASS_NAME	VARCHAR(10),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE	DATE,
KPI_DW_UPDATE_DATE	DATE);
----
drop table kpi_item_dim

show user;

DROP TABLE KPI_ITEM_DIM;

CREATE TABLE KPI_ITEM_DIM	
(ITEM_ID	NUMBER(20,0),
SKU	VARCHAR(100),
TYPE_NAME	VARCHAR(30),
SALESDESCRIPTION	VARCHAR(100),
KPI_DW_SKEY	NUMBER(20,0),
KPI_DW_INSERT_DATE DATE,
KPI_DW_UPDATE_DATE	DATE,
KPI_CLASS_SKEY	NUMBER(20,0),
WS_MERCHANDISE_DEPARTMENT_SKEY	NUMBER(20,0),
WS_MERCHANDISE_COLLECTION_SKEY	NUMBER(20,0),
WS_MERCHANDISE_CLASS_SKEY	NUMBER(20,0),
WS_MERCHANDISE_SUBCLASS_SKEY	NUMBER(20,0));



--------------------------------------------------------------------------------------------------------------------

9.Target Tables loa--"Load the Target Tables using Stage Tables.
      1. Identify the sequence in which the Target Tables has to be loaded. Provide the reasons
      2. Provide the INSERT scripts used to perform the data load"




--KPI_CHANNEL_DIM


INSERT INTO CHANNEL_DIM(DATE_CREATED,IS_RECORD_INACTIVE,LAST_MODIFIED_DATE,LIST_ID,LIST_ITEM_NAME)(SELECT * FROM CHANNEL);
create sequence kpi_dw_skey;
UPDATE KPI_CHANNEL_DIM SET kpi_dw_skey=kpi_dw_skey.nextval;


UPDATE KPI_CHANNEL_DIM 
SET kpi_dw_UPDATE_date=(SELECT SYSDATE FROM DUAL)
WHERE kpi_dw_skey in (SELECT kpi_dw_skey FROM KPI_CHANNEL_DIM );

ALTER TABLE KPI_CHANNEL_DIM  ADD CONSTRAINT KPI_CHANNEL_DIM  PRIMARY KEY (kpi_dw_skey);



--KPI_LOCATION_DIM

insert into kpi_location_dim(location_id,address,city,country,date_last_modified,full_name,isinactive,name)(select * from locations);
create sequence kpi_dw_skey;
update location_dim set kpi_dw_skey=kpi_dw_skey.nextval;

UPDATE 	kpi_LOCATION_DIM 
SET kpi_dw_insert_date=(SELECT SYSDATE FROM DUAL)
WHERE kpi_dw_skey in (SELECT kpi_dw_skey FROM KPI_LOCATION_DIM );

UPDATE KPI_LOCATION_DIM 
SET kpi_dw_update_date=(SELECT SYSDATE FROM DUAL)
WHERE kpi_dw_skey in (SELECT kpi_dw_skey FROM KPI_LOCATION_DIM );

ALTER TABLE  KPI_LOCATION_DIM 
ADD CONSTRAINT PK_LOCATION_DIM  PRIMARY KEY(KPI_DW_SKEY);

--KPI_DEPARTMENT_DIM

insert into DEPARTMENT_DIM(DATE_LAST_MODIFIED,DEPARTMENT_ID,ISINACTIVE,NAME,WS_DESCRIPTION)
(select * from HII.DEPARTMENTS);

UPDATE KPI_DEPARTMENT_DIM
SET kpi_dw_update_date=(SELECT SYSDATE FROM DUAL)
WHERE kpi_dw_skey in (SELECT kpi_dw_skey FROM KPI_DEPARTMENT_DIM );

UPDATE KPI_DEPARTMENT_DIM
SET kpi_dw_insert_date=(SELECT SYSDATE FROM DUAL)
WHERE kpi_dw_skey in (SELECT kpi_dw_skey FROM KPI_DEPARTMENT_DIM );

update KPI_DEPARTMENT_DIM set kpi_dw_skey=kpi_dw_skey.nextval;

ALTER TABLE  KPI_DEPARTMENT_DIM 
ADD CONSTRAINT PK_DEPARTMENT_DIM PRIMARY KEY(KPI_DW_SKEY);

alter table KPI_DEPARTMENT_DIM modify NAME VARCHAR(20);

--TRANSACTION_LINE_FACT
insert into TRANSACTION_LINE_FACT(TRANSACTION_ID,TRANSACTION_LINE_ID,TRANID,TRANSACTION_TYPE,AMOUNT,COST,UNITS)
(select  TRANSACTION_LINES.TRANSACTION_ID,TRANSACTION_LINES.TRANSACTION_LINE_ID,TRANSACTIONS.TRANID,TRANSACTIONS.TRANSACTION_TYPE,TRANSACTION_LINES.AMOUNT,
TRANSACTION_LINES.COST,TRANSACTION_LINES.UNITS
from HII.TRANSACTION_LINES JOIN HII.TRANSACTIONS ON HII.TRANSACTION_LINES.TRANSACTION_ID =HII.TRANSACTIONS.TRANSACTION_ID);

KPI_CHANNEL_SKEY NUMBER(20,0),
KPI_LOCATION_SKEY NUMBER(20,0),
KPI_DEPARTMENT_SKEY NUMBER(20,0),
KPI_ITEM_SKEY        NUMBER(20,0),
KPI_DW_SKEY NUMBER(20,0)

UPDATE TRANSACTION_LINE_FACT SET KPI_CHANNEL_SKEY=kpi_dw_skey.nextval;

UPDATE TRANSACTION_LINE_FACT SET KPI_LOCATION_SKEY=kpi_dw_skey.nextval;
UPDATE TRANSACTION_LINE_FACT SET KPI_DEPARTMENT_SKEY=kpi_dw_skey.nextval;
UPDATE TRANSACTION_LINE_FACT SET KPI_ITEM_SKEY=kpi_dw_skey.nextval;
UPDATE TRANSACTION_LINE_FACT SET KPI_DW_SKEY=kpi_dw_skey.nextval;

ALTER TABLE TRANSACTION_LINE_FACT
ADD CONSTRAINT PK_TRANSACTION_LINE_FACT PRIMARY KEY(KPI_DW_SKEY);


update DEPARTMENT_DIM set kpi_dw_skey=kpi_dw_skey.nextval;

SELECT * FROM TRANSACTION_LINE_FACT;



insert into TRANSACTION_LINE_FACT(TRANDATE)(SELECT HII.TRANSACTIONS.TRANDATE from HII.TRANSACTION_LINES JOIN HII.TRANSACTIONS
 ON HII.TRANSACTION_LINES.TRANSACTION_ID =HII.TRANSACTIONS.TRANSACTION_ID);
 

UPDATE TRANSACTION_LINE_FACT
SET TRANDATE = HII.TRANSACTIONS.TRANDATE 
WHERE  TRANSACTION_ID = (SELECT TRANSACTION_ID FROM  HII.TRANSACTIONS);

UPDATE ITEM_DIM  set KPI_CLASS_SKEY=(select CLASS_ID from hii.ITEMS  where item_dim.item_id=hii.items.item_id);

update transaction_line_fact f set kpi_channel_skey = (select channel_id from transaction.transactions t where f.transaction_id=t.transaction_id);


UPDATE ITEM_DIM SET WS_MERCHANDISE_DEPARTMENT_SKEY=(SELECT  WS_MERCHANDISE_DEPARTMENT_ID FROM HII.ITEMS WHERE HII.ITEMS.ITEM_ID=item_dim.item_id )

UPDATE ITEM_DIM SET WS_MERCHANDISE_COLLECTION_SKEY=(SELECT  WS_MERCHANDISE_COLLECTION_ID FROM HII.ITEMS WHERE HII.ITEMS.ITEM_ID=item_dim.item_id )

UPDATE ITEM_DIM SET WS_MERCHANDISE_CLASS_SKEY=(SELECT  WS_MERCHANDISE_CLASS_ID  FROM HII.ITEMS WHERE HII.ITEMS.ITEM_ID=item_dim.item_id )

UPDATE ITEM_DIM SET WS_MERCHANDISE_SUBCLASS_SKEY=(SELECT  WS_MERCHANDISE_SUBCLASS_ID  FROM HII.ITEMS WHERE HII.ITEMS.ITEM_ID=item_dim.item_id )

UPDATE ITEM_DIM
SET kpi_dw_insert_date=(SELECT SYSDATE FROM DUAL)
WHERE kpi_dw_skey in (SELECT kpi_dw_skey FROM ITEM_DIM );

select * from ITEM_DIM;


ALTER TABLE ITEM_DIM ADD 

ALTER TABLE ITEM_DIM 
ADD CONSTRAINT fk_CLASS
FOREIGN KEY (KPI_CLASS_SKEY) REFERENCES MERCHANDISE_DEPTARMENT_DIM(KPI_DW_SKEY);

ALTER TABLE ITEM_DIM 
ADD CONSTRAINT fk_CLASS_DEPARTMENT_SKEY
FOREIGN KEY (WS_MERCHANDISE_DEPARTMENT_SKEY) REFERENCES MERCHANDISE_DEPTARMENT_DIM (KPI_DW_SKEY);


ALTER TABLE ITEM_DIM 
ADD CONSTRAINT fk_CLASS_COLLECTION_SKEY
FOREIGN KEY (WS_MERCHANDISE_COLLECTION_SKEY) REFERENCES MERCHANDISE_COLLECTION_DIM (KPI_DW_SKEY);



ALTER TABLE ITEM_DIM 
ADD CONSTRAINT fk_CLASS_SUBCLASS_SKEY
FOREIGN KEY (WS_MERCHANDISE_SUBCLASS_SKEY) REFERENCES MERCHANDISE_CLASS_DIM (KPI_DW_SKEY);


ALTER TABLE TRANSACTION_LINE_FACT 
ADD CONSTRAINT fk_ITEM_SKEY
FOREIGN KEY (KPI_ITEM_SKEY) REFERENCES ITEM_DIM (KPI_DW_SKEY);

DELETE FROM TRANSACTION_LINE_FACT 
WHERE KPI_ITEM_SKEY NOT IN (SELECT KPI_DW_SKEY FROM ITEM_DIM);

--------------------------------------------------------------------------------------------------------------------------------------

10.CREATE BRAND_NAME field in KPI_ITEM_DIM and populate values from NAME field present in KPI_CLASS_DIM	"
    1. Provide the script to add the new column
   Provide the UPDATE script to populate BRAND_NAME field"



    ALTER TABLE item_dim 
   ADD BRAND_NAME VARCHAR2(5) ;

   UPDATE item_dim 
   SET BRAND_NAME =(SELECT NAME FROM class_dim WHERE class_dim.KPI_DW_SKEY=item_dim.KPI_DW_SKEY);

---------------------------------------------------------------------------------------------------------------------------------------------------------


11."CREATE KPI_ITEM_DIM_FLAT table STRUCTURE ONLY with following fields using SELECT statement joining the required Target tables
   	1. ITEMS.NAME AS SKU
	2. ITEMS.TYPE_NAME AS ITEM_TYPE
	3. ITEMS.BRAND_NAME AS BRAND
	4. ITEM_MERCHANDISE_DEPARTMENT.DESCRIPTION AS MERCHANDISE_DEPARTMENT
	5. ITEM_MERCHANDISE_DEPARTMENT.ITEM_MERCHANDISE_DEPARTMENT_NA AS MERCHANDISE_DEPT_NAME
	6. ITEM_MERCHANDISE_COLLECTION.DESCRIPTION AS MERCHANDISE_COLLECTION
	7.ITEM_MERCHANDISE_COLLECTION.ITEM_MERCHANDISE_COLLECTION_NA MERCHANDISE_COLLECTION_NAME
	8. ITEM_MERCHANDISE_CLASS.DESCRIPTION AS MERCHANDISE_CLASS
	9. ITEM_MERCHANDISE_CLASS.ITEM_MERCHANDISE_CLASS_NAME AS MERCHANDISE_CLASS_NAME
	10. ITEM_MERCHANDISE_SUBCLASS.DESCRIPTION AS MERCHANDISE_SUBCLASS
	11. ITEM_MERCHANDISE_SUBCLASS.ITEM_MERCHANDISE_SUBCLASS_NAME AS MERCHANDISE_SUBCLASS_NAME
	12. ITEMS.KPI_DW_SKEY as KPI_ITEM_SKEY"	
	"1. Provide the CREATE script 
	2. Provide the BULK INSERT script to load this table
	3. Create a CURSOR to perform ROW by ROW inserts into this table.Submit the queries

--
    create table item_dim_flat(sku varchar(100), item_type varchar(50), brand varchar(50), merchandise_department varchar(50),
merchandise_dept_name varchar(50), merchandise_collection varchar(50), merchandise_collection_name varchar(50), merchandise_class varchar(50),
merchandise_class_name varchar(5), merchandise_subclass varchar(50), merchandise_subclass_name varchar(50), kpi_item_skey number);

declare 

  cursor c1 is select i.sku, i.type_name, i.brand_name, i.kpi_dw_skey, d.description, d.item_merchandise_department_na,
cl.description, cl.item_merchandise_collection_na, c.description, c.item_merchandise_class_name, 
s.description, s.item_merchandise_subclass_name from kpi_item_dim i join kpi_item_merchandise_depar_dim 
d on i.kpi_dw_skey=d.kpi_dw_skey join kpi_item_merchandise_col_dim cl on d.kpi_dw_skey=cl.kpi_dw_skey join kpi_item_merchandise_class_dim
c on cl.kpi_dw_skey=c.kpi_dw_skey join kpi_item_merchandise_subcl_dim s on c.kpi_dw_skey=s.kpi_dw_skey;

 begin

 for cur in c1 loop

  insert into item_dim_flat values(c1.sku, c1.item_type, c1.brand,c1.merchandise_department,c1.merchandise_dept_name,c1.merchandise_collection,
c1.merchandise_collection_name,c1.merchandise_class,c1.merchandise_class_name,c1.merchandise_subclass,c1.merchandise_subclass_name,
c1.kpi_item_skey number)(select i.sku,i.type_name, i.brand_name,i.kpi_dw_skey,d.description,d.item_merchandise_department_na,
cl.description,cl.item_merchandise_collection_na,c.description,c.item_merchandise_class_name,s.description,
s.item_merchandise_subclass_name from kpi_item_dim i,kpi_item_merchandise_depar_dim 
d,kpi_item_merchandise_col_dim cl,kpi_item_merchandise_class_dim c,kpi_item_merchandise_subcl_dim s);

 end loop;

 close c1;

 end;


------------------------------------------------------------------------------------------------------------

12."If TRANSACTION_TYPE is "" Sales Order "" then its Demand, if TRANSACTION_TYPE is "" Invoice"" then its Sales 
Answer the requested questions"	"1. Find the Top 5 and Bottom 5 Items based on the Demand Amount values in a single query
2. Which Department has the highest Demand and Sales Amount
3. Find the Demand Profit and Sales Profit for each ITEM. Populate ITEM.NAME
4. Populate top 10 LOCATIONS based on number of Demand Transactions using Analytical functions
5. Find Demand Amount, Demand Units, Sales Amount and Sales Units for each Channel
6. Write a VIEW using target tables with following fields
	 - TRANSACTION_ID
	 - TRANSACTION_LINE_ID
	 - TRANDATE
	 - TRANSACTION_TYPE
	 - ITEM_NAME
	 - ITEM_TYPE_NAME
	 - LOCATION_NAME
	 - DEPARTMENT_NAME
 	 - CHANNEL_NAME
	 - MERCHANDISE_DEPARTMENT_NAME
	- MERCHANDISE_DEPARTMENT_DESCRIPTION
	- MERCHANDISE_COLLECTION_NAME
	- MERCHANDISE_COLLECTION_DESCRIPTION
	- MERCHANDISE_CLASS_NAME
	- MERCHANDISE_CLASS_DESCRIPTION
	- MERCHANDISE_SUBCLASS_NAME
	- MERCHANDISE_SUBCLASS_DESCRIPTION
	- Demand_Amount
	- Demand_Units
	- Demand_Profit
	- Demand_Profit%
	- Sales_Amount
	- Sales_Units
	- Sales_Profit
	- Sales_Profit%"


ANSWERS:
     
   1) select transaction_type, amount from (select transaction_type, amount, row_number() 
 over (partition by transaction_type order by amount desc) top_val, row_number() over (partition by transaction_type order by amount)
 bottom_val) where top_val<=5 or bottom_val<=5;

2) select d.name,  max(t.amount) from department_dim d join transaction_line_fact t on d.kpi_dw_skey=t.kpi_dw_skey 
group by t.transaction_type, d.name having transaction_type='Sales Order' or transaction_type='Invoices'; 

4) select l.city from location_dim l join transaction_line_fact f on f.kpi_dw_skey=l.kpi_dw_skey
 where transaction_type='Sales Order' order by transaction_type;

5) select transaction_type, amount, units from transaction_line_fact  group by transaction_type, amount, units order by 1;

6) create force view target_view as select t.transaction_id, t.transaction_line_id, t.trandate, t.transaction_type,
			i.type_name, 
			l.city, 
			d.name, 
			cd.list_item_name, 
			id.item_merch_department_na,
			id.description,
			ic.item_merch_collection_na,
			ic.description,
			c.item_merch_class_name,
			c.description,
			s.item_merch_subclass_name,
			s.description,
			t.amount,
			t.units
			from transaction_line_fact t join item_dim i on t.kpi_dw_skey = i.kpi_dw_skey
			join location_dim l on i.kpi_dw_skey = l.kpi_dw_skey
			join department_dim d on l.kpi_dw_skey = d.kpi_dw_skey
			join channel_dim cd on d.kpi_dw_skey = cd.kpi_dw_skey
			join item_merch_department_dim id on cd.kpi_dw_skey = id.kpi_dw_skey
			join item_merch_collection_dim ic on id.kpi_dw_skey = ic.kpi_dw_skey
			join item_merch_class_dim c on ic.kpi_dw_skey = c.kpi_dw_skey
			join item_merch_subclass_dim s on c.kpi_dw_skey = s.kpi_dw_skey;





-------------------------------------------------------------------------------------------------------------------------------------------------------



